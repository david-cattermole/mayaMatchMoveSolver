/*
 * Copyright (C) 2019, 2025 David Cattermole.
 *
 * This file is part of mmSolver.
 *
 * mmSolver is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * mmSolver is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with mmSolver.  If not, see <https://www.gnu.org/licenses/>.
 * ===================================================================
 *
 * This file lists fields to be filled in by CMake as it builds and
 * configures the mmSolverLibs project.
 *
 */

#include <mmsolverlibs/buildConstant.h>

namespace mmsolverlibs {
namespace build_info {

const char* const project_name() { return "@PROJECT_NAME@"; };

const char* const project_version_major() { return "@PROJECT_VERSION_MAJOR@"; };
const char* const project_version_minor() { return "@PROJECT_VERSION_MINOR@"; };
const char* const project_version_patch() { return "@PROJECT_VERSION_PATCH@"; };
const char* const project_version_tweak() { return "@PROJECT_VERSION_TWEAK@"; };
const char* const project_version() { return "@PROJECT_VERSION@"; };

const char* const project_homepage_url() { return "@PROJECT_HOMEPAGE_URL@"; };
const char* const project_description() { return "@PROJECT_DESCRIPTION@"; };
const char* const project_author() { return "@PROJECT_AUTHOR@"; };
const char* const project_copyright() { return "@PROJECT_COPYRIGHT@"; };

const char* const source_dir() { return "@CMAKE_SOURCE_DIR@"; };
const char* const build_date_time() { return "@BUILD_DATE_TIME@"; };
const char* const git_branch() { return "@GIT_BRANCH@"; };
const char* const git_commit_hash_long() { return "@GIT_COMMIT_HASH_LONG@"; };
const char* const git_commit_hash_short() { return "@GIT_COMMIT_HASH_SHORT@"; };

const char* const cxx_compiler() {
    return "id=@CMAKE_CXX_COMPILER_ID@ "
           "version=@CMAKE_CXX_COMPILER_VERSION@ "
           "standard=@CMAKE_CXX_STANDARD@ "
           "executable='@CMAKE_CXX_COMPILER@'";
};
const char* const cxx_linker() {
    return "id=@CMAKE_CXX_COMPILER_LINKER_ID@ "
           "version=@CMAKE_CXX_COMPILER_LINKER_VERSION@ "
           "executable='@CMAKE_CXX_COMPILER_LINKER@'";
};

}  // namespace build_info
}  // namespace mmsolverlibs
